# Generated by Django 4.2.20 on 2025-04-05 14:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FormatChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('MP4', 'MP4'), ('MP3', 'MP3'), ('FLV', 'FLV'), ('MOV', 'MOV'), ('AVI', 'AVI'), ('WMV ', 'WMV '), ('MKV ', 'MKV '), ('WebM', 'WebM'), ('3GP ', '3GP '), ('MPEG-2 ', 'MPEG-2 '), ('HEVC ', 'HEVC ')], max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='GenreChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Action', 'Action'), ('Adventure', 'Adventure'), ('Comedy', 'Comedy'), ('Drama', 'Drama'), ('Horror', 'Horror'), ('Romance', 'Romance'), ('Sci-Fi', 'Sci-Fi'), ('Fantasy', 'Fantasy'), ('Thriller', 'Thriller'), ('Mystery', 'Mystery'), ('Documentary', 'Documentary'), ('Animation', 'Animation'), ('Musical', 'Musical'), ('Crime', 'Crime'), ('Historical', 'Historical'), ('Family', 'Family'), ('Sports', 'Sports'), ('Biographical', 'Biographical'), ('War', 'War'), ('Superhero', 'Superhero'), ('Family', 'Family'), ('Family', 'Family'), ('Family', 'Family'), ('Family', 'Family'), ('Family', 'Family')], max_length=15, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='video',
            name='added_on',
            field=models.DateField(auto_now=True),
        ),
        migrations.AddField(
            model_name='video',
            name='aspectRation',
            field=models.TextField(blank=True, help_text='The aspect ratio of the video (e.g., 16:9, 4:3, etc.)'),
        ),
        migrations.AddField(
            model_name='video',
            name='audioChannels',
            field=models.CharField(blank=True, help_text='The number of audio channels (e.g., mono, stereo, 5.1 surround)', max_length=20),
        ),
        migrations.AddField(
            model_name='video',
            name='audioCodec',
            field=models.CharField(blank=True, help_text='The codec used for audio (e.g., AAC, MP3, Opus)', max_length=20),
        ),
        migrations.AddField(
            model_name='video',
            name='bitrate',
            field=models.CharField(blank=True, help_text='The data rate of the video, which affects video quality and file size', max_length=20),
        ),
        migrations.AddField(
            model_name='video',
            name='codec',
            field=models.CharField(blank=True, help_text='The video codec used for compression (e.g., H.264, HEVC, VP9)', max_length=20),
        ),
        migrations.AddField(
            model_name='video',
            name='copyright',
            field=models.TextField(blank=True, help_text='The entity or individual who holds the copyright'),
        ),
        migrations.AddField(
            model_name='video',
            name='country_of_origin',
            field=models.CharField(blank=True, help_text='Where the book is written or movie is made', max_length=25),
        ),
        migrations.AddField(
            model_name='video',
            name='description',
            field=models.TextField(blank=True, help_text='A brief description of the videoâ€™s content or storyline'),
        ),
        migrations.AddField(
            model_name='video',
            name='director',
            field=models.CharField(blank=True, help_text='Director of the movie', max_length=60),
        ),
        migrations.AddField(
            model_name='video',
            name='duration',
            field=models.CharField(blank=True, help_text='Duration of the clip', max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='video',
            name='durationGroup',
            field=models.CharField(blank=True, choices=[('below30s', 'below30s'), ('below1m', 'below1m'), ('below3m', 'below3m'), ('below5m', 'below5m'), ('below10m', 'below10m'), ('below20m', 'below20m'), ('below30m', 'below30m'), ('below1h', 'below1h'), ('below2h', 'below2h'), ('below5h', 'below5h'), ('above5h', 'above5h')], help_text='Grouping done based on duration of the clips like below 30 seconds, below 1 minutes etc', max_length=15),
        ),
        migrations.AddField(
            model_name='video',
            name='frameRate',
            field=models.TextField(blank=True, help_text='The number of frames per second (FPS) (e.g., 24fps, 30fps, 60fps)'),
        ),
        migrations.AddField(
            model_name='video',
            name='isMonetized',
            field=models.BooleanField(default=False, help_text='Whether the video is monetized (e.g., ads enabled, subscription content)'),
        ),
        migrations.AddField(
            model_name='video',
            name='keyword',
            field=models.TextField(blank=True, help_text='Relevant tags or keywords that help in searching or categorizing the video'),
        ),
        migrations.AddField(
            model_name='video',
            name='language',
            field=models.CharField(default='Hindi', help_text='The language spoken in the video or the primary language', max_length=20),
        ),
        migrations.AddField(
            model_name='video',
            name='license',
            field=models.CharField(blank=True, help_text='The type of license (e.g., Creative Commons, All Rights Reserved, Public Domain)', max_length=50),
        ),
        migrations.AddField(
            model_name='video',
            name='location',
            field=models.CharField(blank=True, help_text='Where the video was filmed or the setting/context of the content', max_length=60),
        ),
        migrations.AddField(
            model_name='video',
            name='native_language',
            field=models.CharField(default='English', help_text='Language of the movie / book first made / written', max_length=20),
        ),
        migrations.AddField(
            model_name='video',
            name='performers',
            field=models.CharField(blank=True, help_text='Main actors or individuals featured in the video (for movies, TV shows, etc.)', max_length=60),
        ),
        migrations.AddField(
            model_name='video',
            name='previewClip',
            field=models.FileField(blank=True, help_text='Short video file to show as thumbnail video', upload_to='preview/'),
        ),
        migrations.AddField(
            model_name='video',
            name='producer',
            field=models.CharField(blank=True, help_text='The producer or production company', max_length=60),
        ),
        migrations.AddField(
            model_name='video',
            name='resolution',
            field=models.CharField(blank=True, help_text='Resolutions of the clip', max_length=5),
        ),
        migrations.AddField(
            model_name='video',
            name='restrictions',
            field=models.TextField(blank=True, help_text='Usage Restrictions: Any restrictions on the use or distribution of the video clip'),
        ),
        migrations.AddField(
            model_name='video',
            name='sampleRate',
            field=models.CharField(blank=True, help_text='The audio sample rate (e.g., 44.1 kHz, 48 kHz)', max_length=20),
        ),
        migrations.AddField(
            model_name='video',
            name='source',
            field=models.CharField(blank=True, help_text='Where the video came from (e.g., YouTube, Vimeo, self-uploaded)', max_length=50),
        ),
        migrations.AddField(
            model_name='video',
            name='subtitles',
            field=models.CharField(blank=True, help_text='Subtitles/Closed Captions: Availability of subtitles or closed captions and languages supported', max_length=200),
        ),
        migrations.AddField(
            model_name='video',
            name='thumbnailImage',
            field=models.FileField(blank=True, help_text='Image file to show as thumbnail image', upload_to='thumnails/'),
        ),
        migrations.AddField(
            model_name='video',
            name='version',
            field=models.CharField(default='1', help_text='Version Number: If the video has been edited or updated, store version details', max_length=2),
        ),
        migrations.AddField(
            model_name='video',
            name='videoBitDepth',
            field=models.CharField(blank=True, help_text='The color depth of the video (e.g., 8-bit, 10-bit)', max_length=20),
        ),
        migrations.AddField(
            model_name='video',
            name='writer',
            field=models.CharField(blank=True, help_text='Author of the story', max_length=60),
        ),
        migrations.AlterField(
            model_name='video',
            name='file',
            field=models.FileField(help_text='Video clip file', upload_to='videos/'),
        ),
        migrations.AlterField(
            model_name='video',
            name='title',
            field=models.CharField(help_text='Title of the clip', max_length=200),
        ),
        migrations.CreateModel(
            name='PlaybackInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view', models.BigIntegerField(null=True)),
                ('likes', models.BigIntegerField(null=True)),
                ('dislikes', models.BigIntegerField(null=True)),
                ('comment_count', models.BigIntegerField(null=True)),
                ('clip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video', to='api.video')),
            ],
        ),
        migrations.CreateModel(
            name='Monetization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revenueGenerate', models.IntegerField(help_text='Revenue Generated: If the video is monetized, the revenue it has generated (if available).', null=True)),
                ('clip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moneyearned', to='api.video')),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('added_on', models.DateTimeField(auto_now=True)),
                ('clip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentfor', to='api.video')),
            ],
        ),
        migrations.AddField(
            model_name='video',
            name='format',
            field=models.ManyToManyField(help_text='select from drop down', related_name='format', to='api.formatchoice'),
        ),
        migrations.AddField(
            model_name='video',
            name='genere',
            field=models.ManyToManyField(help_text='select from drop down', related_name='genres', to='api.genrechoice'),
        ),
    ]
